# This is a basic workflow to help you get started with Actions

name: CI

# on: [ push ]

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  checks: write
  contents: read
  issues: read
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # node-version: [14.x, 16.x, 17.x]
        node-version: [17.x]


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: junit.xml    # Path to test results
          reporter: jest-junit        # Format of test results

      - name: Code Coverage Report
        uses: ArtiomTr/jest-coverage-report-action@v2

      - name: Comment Test Coverage
        uses: AthleticNet/comment-test-coverage@1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: coverage/coverage-summary.json
          title: Test Coverage

      - name: Comment Test Coverage
        uses: 5monkeys/cobertura-action@master
        with:
          path: coverage/cobertura-coverage.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 30
      

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (NodeJS ${{ matrix.node-version }})
          path: junit.xml

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: junit.xml

      - name: Publish Test Report
        uses: romeovs/lcov-reporter-action@v0.2.16
        with:
          lcov-file: ./coverage/lcov.info
    
  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
          
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: "artifacts/**/*.xml"


# - name: Upload coverage to Codecov
#     uses: codecov/codecov-action@v2
#     with:
#       token: ${{ secrets.CODECOV_TOKEN }}
      
          
  